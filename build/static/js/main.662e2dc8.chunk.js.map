{"version":3,"sources":["components/Navbar/ManageList/FilterMenu/FilterMenu.jsx","components/Navbar/ManageList/SortMenu/SortMenu.jsx","components/Navbar/ManageList/ManageList.jsx","components/Common/utilites.js","components/Navbar/RidesListItem/RidesListItem.jsx","components/Navbar/Navbar.jsx","components/Infobar/InfobarRideMembers/InfobarRideMembers.jsx","components/Infobar/InfobarRideIndicators/InfobarRideIndicators.jsx","components/Infobar/InfobarGallery/InfobarGallery.jsx","components/Infobar/Infobar.jsx","components/Infobar/InfobarContainer.jsx","components/Infobar/InfobarCollapseBtn/InfobarCollapseBtn.jsx","components/Common/routing.js","components/Common/checkMobile.js","components/MobileHeader/MobileHeader.jsx","components/MobileNavbar/MobileNavbar.jsx","components/Map/Map.jsx","App.js","store/bikers-data.js","store/rides-data.js","store/store.js","index.js"],"names":["FilterMenuItem","props","id","className","isActive","src","img","alt","name","FilterMenu","filterMenuItems","allBikers","map","b","filteredBikers","find","photoSmall","onClick","e","target","closest","action","type","bikerId","dataset","dispatch","SortMenuItem","sort2","sort1","SortMenu","sortParameter","sortFromBiggest","checkActive","parameter","sortArr","classList","contains","s","ManageList","filterMenuIsOpened","navbar","sortMenuIsOpened","bikers","output","convertStrToMs","str","timeArr","split","convertMsToStr","ms","hours","Math","floor","minutes","addZero","num","separateDecimal","accuracy","push","toFixed","slice","bikersFilter","members","filter","findIndex","item","MemberPic","long","MembersPicFor3","m","RideListItemMembersPhotos","length","RidesListItem","date","Date","dateString","getDate","getMonth","getFullYear","returnAdditionalInfo","info","value","distance","unit","speed","decimal","time","to","url","active","Logo","RidesListSeparator","param","separatorText","currEl","prevEl","currElDate","startDate","prevElDate","currSpeed","cleanTime","prevSpeed","currTime","prevTime","getSeparatorText","separatorUnit","RidesListItems","state","processedRides","r","i","arr","averageSpeed","activeRide","Navbar","RideMemberItem","RideMembers","rideMembersItems","RideIndicatorItem","integer","RideIndicators","ride","startTime","getHours","getMinutes","climb","fullTime","GalleryPhoto","InfobarGallery","galleryItems","photos","p","RideHeader","handlers","useSwipeable","onSwiped","eventData","isMobile","dir","preventDefaultTouchmoveEvent","href","strava","rel","Infobar","isCollapsed","stravaLink","InfobarContainer","membersNames","layout","infobar","CollapseInfobarBtn","parseUrl","rides","variants","checkUrlValidity","checkMobile","window","innerWidth","mobile","BurgerBtn","MobileHeader","headerOnClick","MobileNavbar","navbarIsOpened","mobileNavbarIsOpen","onSwipedLeft","rerenderMap","containerHeight","document","querySelector","scrollHeight","mapUrl","replace","mapEl","innerHTML","match","script","createElement","async","appendChild","errorMessage","add","Map","this","React","PureComponent","App","store","getState","bind","location","pathname","onresize","activeRideIndex","photoLarge","_state","_callSubscriber","subscribe","observer","_processRides","tempArr","sortRides","sort","a","biker","member","checkBikers","index","el","filterIndex","splice","scrollTop","console","error","initState","forEach","initBikers","join","parse","initRides","rerenderEntireTree","ReactDOM","render","StrictMode","path","getElementById"],"mappings":"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","file":"static/js/main.662e2dc8.chunk.js","sourcesContent":["import React from \"react\"\r\nimport './FilterMenu.scss'\r\n\r\nconst FilterMenuItem = (props) => {\r\n   return (\r\n      <li data-biker-id={props.id} className={\"filter_menu_item\" + (props.isActive ? ' active' : '')}>\r\n         <div className=\"filter_menu_item__img\">\r\n            <img src={props.img} alt={props.name} />\r\n         </div>\r\n         <div className=\"filter_menu_item__name\">Mr. {props.name}</div>\r\n      </li>\r\n   )\r\n}\r\n\r\nconst FilterMenu = (props) => {\r\n   const changeFilter = (e) => {\r\n      if (!e.target.closest('.filter_menu_item')) {\r\n         return\r\n      }\r\n      const clickedBiker = e.target.closest('.filter_menu_item').dataset.bikerId\r\n      const action = {\r\n         type: 'TOGGLE-FILTERED-BIKER',\r\n         bikerId: clickedBiker\r\n      }\r\n      props.dispatch(action)\r\n   }\r\n   const checkActive = (id) => {\r\n      if (props.filteredBikers.find(b => b === id)) {\r\n         return true\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   const filterMenuItems = props.allBikers\r\n      .map(b => <FilterMenuItem id={b.id} key={b.id} isActive={checkActive(b.id)}\r\n         name={b.name} img={b.photoSmall} />)\r\n\r\n   return (\r\n      <ul onClick={changeFilter} className=\"filter_menu_items\" >\r\n         {filterMenuItems}\r\n      </ul>\r\n   )\r\n}\r\n\r\nexport default FilterMenu","import React from \"react\"\r\nimport './SortMenu.scss'\r\n\r\nconst SortMenuItem = (props) => {\r\n   return (\r\n      <li>\r\n         <div data-sort-parameter={props.type} className={`sort_menu_popup_item${props.isActive ? ' ' + props.isActive : ''}`}>\r\n            <div className=\"sort_menu_popup_item__name\">{props.name}</div>\r\n            <button className=\"sort_menu_popup_item__btn smallest\">{props.sort2}</button>\r\n            <button className=\"sort_menu_popup_item__btn biggest\">{props.sort1}</button>\r\n         </div>\r\n      </li>\r\n   )\r\n}\r\n\r\nconst SortMenu = (props) => {\r\n   const sortParameter = props.sortParameter\r\n   const sortFromBiggest = props.sortFromBiggest\r\n\r\n   const changeSort = (e) => {\r\n      if (e.target.classList.contains('sort_menu_popup_item__btn')) {\r\n         const sortParameter = e.target.closest('.sort_menu_popup_item').dataset.sortParameter\r\n         const sortFromBiggest = e.target.classList.contains('biggest')\r\n         const action = {\r\n            type: 'TOGGLE-RIDES-SORT',\r\n            sortParameter: sortParameter,\r\n            sortFromBiggest: sortFromBiggest\r\n         }\r\n         props.dispatch(action)\r\n      }\r\n   }\r\n\r\n   const checkActive = (parameter) => {\r\n      if (sortParameter === parameter) {\r\n         if (sortFromBiggest) {\r\n            return 'fromBiggest'\r\n         } else {\r\n            return 'fromSmallest'\r\n         }\r\n      } else {\r\n         return false\r\n      }\r\n   }\r\n\r\n   const sortArr = [\r\n      {\r\n         name: 'By date:',\r\n         type: 'date',\r\n         sort1: 'Latest',\r\n         sort2: 'Oldest',\r\n         isActive: checkActive('date')\r\n      },\r\n      {\r\n         name: 'By distance:',\r\n         type: 'distance',\r\n         sort1: 'Longest',\r\n         sort2: 'Shortest',\r\n         isActive: checkActive('distance')\r\n      },\r\n      {\r\n         name: 'By average speed:',\r\n         type: 'speed',\r\n         sort1: 'Fastest',\r\n         sort2: 'Slowest',\r\n         isActive: checkActive('speed')\r\n      },\r\n      {\r\n         name: 'By riding time:',\r\n         type: 'time',\r\n         sort1: 'Longest',\r\n         sort2: 'Shortest',\r\n         isActive: checkActive('time')\r\n      },\r\n   ]\r\n\r\n   return (\r\n      <ul onClick={changeSort} >\r\n         {sortArr.map(s => <SortMenuItem key={s.type} name={s.name} type={s.type} \r\n            sort1={s.sort1} sort2={s.sort2} isActive={s.isActive} />)}\r\n      </ul>\r\n   )\r\n}\r\n\r\nexport default SortMenu","import React from \"react\"\r\nimport './ManageList.scss'\r\nimport FilterMenu from \"./FilterMenu/FilterMenu\"\r\nimport SortMenu from \"./SortMenu/SortMenu\"\r\n\r\nconst ManageList = (props) => {\r\n   const filterMenuIsOpened = props.navbar.filterMenuIsOpened\r\n   const sortMenuIsOpened = props.navbar.sortMenuIsOpened\r\n\r\n   const toggleFilterMenu = () => {\r\n      const action = {type: 'TOGGLE-FILTER-MENU'}\r\n      props.dispatch(action)\r\n   }\r\n   const toggleSortMenu = () => {\r\n      const action = {type: 'TOGGLE-SORT-MENU'}\r\n      props.dispatch(action)\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <div className=\"manage_list\">\r\n            <div className=\"manage_list__global_buttons\">\r\n               <button onClick={toggleFilterMenu} className=\"manage_list__btn filter_btn\">Filter</button>\r\n               <button onClick={toggleSortMenu} className=\"manage_list__btn sort_btn\">Sort</button>\r\n            </div>\r\n            <div className=\"manage_list__submenu\">\r\n               <div className={\"navbar_menu_popup filter_menu\" + (filterMenuIsOpened ? \" opened\" : \"\")}>\r\n                     { <FilterMenu\r\n                        allBikers={props.bikers}\r\n                        filteredBikers={props.navbar.output.filteredBikers}\r\n                        dispatch={props.dispatch} />}\r\n               </div>\r\n               <div className={\"navbar_menu_popup sort_menu\" + (sortMenuIsOpened ? \" opened\" : \"\")}>\r\n                  <SortMenu \r\n                     sortParameter={props.navbar.output.sortParameter}\r\n                     sortFromBiggest={props.navbar.output.sortFromBiggest}\r\n                     dispatch={props.dispatch} />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ManageList","//  DATE FEATURES\r\n\r\nexport const convertStrToDate = (date, time) => {\r\n   return Date.parse(`${date}T${time}:00.000+03:00`)\r\n}\r\n\r\nexport const convertStrToMs = (str) => {\r\n   let timeArr = str.split(':')\r\n   return timeArr[0] * 1000 * 60 * 60 + timeArr[1] * 1000 * 60 + timeArr[2] * 1000\r\n}\r\n\r\nexport const convertMsToStr = (ms) => {\r\n   const hours = Math.floor(ms / 1000 / 60 / 60)\r\n   const minutes = addZero(Math.floor((ms - hours * 1000 * 60 * 60) / 1000 / 60))\r\n   return `${hours}:${minutes}`\r\n}\r\n\r\n// DIGITS FEATURES\r\n\r\nexport const addZero = (num) => {\r\n   if (+num < 10) {\r\n      return '0' + num\r\n   }\r\n   return num\r\n}\r\n\r\nexport const separateDecimal = (num, accuracy = 1) => {\r\n   let output = []\r\n   output.push(Math.floor(num) + '')\r\n   output.push((num.toFixed(accuracy) + '').slice(-accuracy))\r\n   return output\r\n}\r\n\r\n// OTHER\r\n\r\nexport const bikersFilter = (members, allBikers) => {\r\n   return allBikers.filter(b => (members.findIndex(item => item === b.name) >= 0))\r\n}\r\n","import React from \"react\"\r\nimport './RidesListItem.scss'\r\nimport { addZero, bikersFilter, separateDecimal } from \"../../Common/utilites\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nconst MemberPic = (props) => {\r\n   return (\r\n      <img src={props.photoSmall} alt={props.name} \r\n         className={`rides_list_item__member_pic${props.long ? ' long' : ''}`} />\r\n   )\r\n}\r\n\r\nconst MembersPicFor3 = (props) => {\r\n   const m = props.members\r\n   return (\r\n      <>\r\n         <div>\r\n            <MemberPic photoSmall={m[0].photoSmall} name={m[0].name} long={true} />\r\n         </div>\r\n         <div>\r\n            <MemberPic photoSmall={m[1].photoSmall} name={m[1].name}/>\r\n            <MemberPic photoSmall={m[2].photoSmall} name={m[2].name}/>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nconst RideListItemMembersPhotos = (props) => {\r\n   const members = bikersFilter(props.members, props.allBikers)\r\n   let membersPics\r\n   if (members.length === 3) {\r\n      return <MembersPicFor3 members={members} />\r\n   } else if (members.length === 2) {\r\n      membersPics = members.map(m => <MemberPic \r\n         key={m.name}\r\n         photoSmall={m.photoSmall} \r\n         name={m.name} \r\n         long={true} />)\r\n   } else {\r\n      membersPics = members.map(m => <MemberPic \r\n         key={m.name}\r\n         photoSmall={m.photoSmall} \r\n         name={m.name} />)\r\n   }\r\n   return membersPics\r\n}\r\n\r\nconst RidesListItem = (props) => {\r\n   const date = new Date(props.date)\r\n   const dateString = props.sortParameter === 'date'\r\n   ? `${addZero(date.getDate())}.${addZero(date.getMonth() + 1)}`\r\n   : `${addZero(date.getDate())}.${addZero(date.getMonth() + 1)}.${date.getFullYear()}`\r\n\r\n   const returnAdditionalInfo = () => {\r\n      let info = {}\r\n      if (props.sortParameter === 'date' || props.sortParameter === 'distance') {\r\n         info.value = Math.floor(props.distance)\r\n         info.unit = 'km'\r\n      } else if (props.sortParameter === 'speed') {\r\n         info.value = separateDecimal(props.speed)[0] + '.'\r\n         info.decimal = separateDecimal(props.speed)[1]\r\n         info.unit = 'km/h'\r\n      } else if (props.sortParameter === 'time') {\r\n         info.decimal = separateDecimal(props.time / 1000 / 60 / 60)[1] > 5 ? 5 : ''\r\n         info.value = Math.floor(props.time / 1000 / 60 / 60) + (info.decimal > 0 ? '.' : '')\r\n         info.unit = 'h'\r\n      }\r\n      return info\r\n   }\r\n\r\n   return (\r\n      <div className=\"rides_list_item\">\r\n         <Link to={props.url}>\r\n            <div className={`rides_list_item__container ${props.active ? ' active' : ''}`}>\r\n               <div className=\"rides_list_item__left\">\r\n                  <div className=\"rides_list_item__members\">\r\n                     <RideListItemMembersPhotos members={props.members} allBikers={props.allBikers} />\r\n                  </div>\r\n               </div>\r\n               <div className=\"rides_list_item__center\">\r\n                  <div className=\"rides_list_item__name\">{props.name}</div>\r\n                  <div className=\"rides_list_item__date\">{dateString}</div>\r\n               </div>\r\n               <div className=\"rides_list_item__right\">\r\n                  <div className=\"rides_list_item__distance\">\r\n                     <div className=\"rides_list_item__distance_num\">\r\n                        {returnAdditionalInfo().value}<span className=\"decimal\">{returnAdditionalInfo().decimal}</span>\r\n                     </div>\r\n                     <div className=\"rides_list_item__distance_unit\">\r\n                        {returnAdditionalInfo().unit}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </Link>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default RidesListItem","import React from \"react\"\r\nimport ManageList from \"./ManageList/ManageList\"\r\nimport './Navbar.scss'\r\nimport RidesListItem from \"./RidesListItem/RidesListItem\"\r\n\r\nexport const Logo = (props) => {\r\n   return (\r\n      <div className=\"header_logo\">\r\n         <h1>Rides history</h1>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst RidesListSeparator = (props) => {\r\n   const getSeparatorText = (currEl, prevEl, param) => {\r\n      switch (param) {\r\n         case 'date':\r\n            const currElDate = new Date(currEl.startDate)\r\n            const prevElDate = prevEl ? new Date(prevEl.startDate) : null\r\n            if (!prevElDate) {\r\n               return currElDate.getFullYear()\r\n            } else if (prevElDate.getFullYear() !== currElDate.getFullYear()) {\r\n               return currElDate.getFullYear()\r\n            }\r\n            break\r\n         case 'distance':\r\n            if (!prevEl) {\r\n               return currEl.distance < 50 ? '<50' : '>100'\r\n            }\r\n            if ((prevEl.distance < 50 && currEl.distance > 50) || (prevEl.distance > 100 && currEl.distance < 100)) {\r\n               return '50-100'\r\n            }\r\n            if (prevEl.distance > 50 && currEl.distance < 50) {\r\n               return '<50'\r\n            }\r\n            if (prevEl.distance < 100 && currEl.distance > 100) {\r\n               return '>100'\r\n            }\r\n            break\r\n         case 'speed':\r\n            const currSpeed = currEl.distance / currEl.cleanTime * 1000 * 60 * 60\r\n            const prevSpeed = prevEl ? prevEl.distance / prevEl.cleanTime * 1000 * 60 * 60 : null\r\n            if (!prevEl) {\r\n               return currSpeed < 15 ? '<15' : '>18'\r\n            }\r\n            if ((prevSpeed < 15 && currSpeed > 15) || (prevSpeed > 18 && currSpeed < 18)) {\r\n               return '15-18'\r\n            }\r\n            if (prevSpeed > 15 && currSpeed < 15) {\r\n               return '<15'\r\n            }\r\n            if (prevSpeed < 18 && currSpeed > 18) {\r\n               return '>18'\r\n            }\r\n            break\r\n         case 'time':\r\n            const currTime = currEl.cleanTime / 1000 / 60 / 60\r\n            const prevTime = prevEl ? prevEl.cleanTime / 1000 / 60 / 60 : null\r\n            if (!prevEl) {\r\n               return currTime < 4 ? '<4' : '>7'\r\n            }\r\n            if ((prevTime < 4 && currTime > 4) || (prevTime > 7 && currTime < 7)) {\r\n               return '4-7'\r\n            }\r\n            if (prevTime > 4 && currTime < 4) {\r\n               return '<4'\r\n            }\r\n            if (prevTime < 7 && currTime > 7) {\r\n               return '>7'\r\n            }\r\n            break\r\n         default:\r\n            return null\r\n      }\r\n   }\r\n   const getSeparatorUnit = (param) => {\r\n      if (param === 'date') return null\r\n      if (param === 'distance') return 'km'\r\n      if (param === 'speed') return 'km/h'\r\n      if (param === 'time') return 'h'\r\n   }\r\n\r\n   const separatorText = getSeparatorText(props.currEl, props.prevEl, props.sortParameter)\r\n   const separatorUnit = getSeparatorUnit(props.sortParameter)\r\n   if (separatorText) {\r\n      return (\r\n         <div className='rides_list_separator'>\r\n            {separatorText} <span className=\"rides_list_separator__unit\">{separatorUnit}</span>\r\n         </div>\r\n      )\r\n   } else return null\r\n}\r\n\r\nconst RidesListItems = (props) => {\r\n\r\n   return props.state.processedRides\r\n      .map((r, i, arr) => {\r\n         return ( <li key={r.url}>\r\n         <RidesListSeparator \r\n            currEl={r}\r\n            prevEl={arr[i - 1]}\r\n            sortParameter={props.state.navbar.output.sortParameter} />\r\n\r\n         <RidesListItem \r\n            id={r.id}\r\n            url={r.url}\r\n            key={r.id} \r\n            name={r.name}\r\n            date={r.startDate}\r\n            distance={r.distance}\r\n            speed={r.averageSpeed}\r\n            time={r.cleanTime}\r\n            members={r.members}\r\n            allBikers={props.state.bikers}\r\n            sortParameter={props.state.navbar.output.sortParameter}\r\n            active={props.state.activeRide === i ? true : false} />\r\n         </li>)\r\n      }\r\n   )\r\n}\r\n\r\nconst Navbar = (props) => {\r\n   const closeMobileNavbar = () => {\r\n      const action = {\r\n         type: 'TOGGLE-MOBILE-MENU'\r\n      }\r\n      props.dispatch(action)\r\n   }\r\n\r\n   return (\r\n      <div className=\"navbar\">\r\n         <Logo />\r\n         <ManageList bikers={props.state.bikers} navbar={props.state.navbar} dispatch={props.dispatch} />\r\n         <div className=\"riders_list_wrapper\">\r\n            <ul onClick={closeMobileNavbar} className=\"rides_list\">\r\n               <RidesListItems state={props.state} />\r\n            </ul>\r\n         </div>\r\n         <div className=\"right_border\"></div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\"\r\nimport './InfobarRideMembers.scss'\r\n\r\nconst RideMemberItem = (props) => {\r\n   return (\r\n      <div className=\"ride_member_item\">\r\n         <img src={props.photoSmall} alt={`Mr. ${props.name}`} className=\"ride_member_item__img\" />\r\n         <div className=\"ride_member_item__name\">Mr. {props.name}</div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst RideMembers = (props) => {\r\n   const rideMembersItems = props.members.map(m => <RideMemberItem key={m.id} name={m.name} photoSmall={m.photoSmall} />)\r\n   return (\r\n      <div className=\"ride_members\">\r\n         <h3>Members:</h3>\r\n         <ul className=\"ride_members_items\">\r\n            {rideMembersItems}\r\n         </ul>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default RideMembers","import React from \"react\";\r\nimport { addZero, convertMsToStr, separateDecimal } from \"../../Common/utilites\";\r\nimport './InfobarRideIndicators.scss'\r\n\r\nconst RideIndicatorItem = (props) => {\r\n   let integer, decimal\r\n   if (props.decimal) {\r\n      integer = separateDecimal(props.value, props.decimal)[0] + '.'\r\n      decimal = separateDecimal(props.value, props.decimal)[1]\r\n   } else {\r\n      integer = props.value\r\n      decimal = ''\r\n   }\r\n   \r\n   return (\r\n      <li className=\"ride_indicators_item\">\r\n         <div className=\"ride_indicators_item__value\">\r\n            {integer}<span className=\"decimal\">{decimal}</span>\r\n         <span className=\"ride_indicators_item__unit\">\r\n            {props.unit ? (' ' + props.unit) : ''}\r\n         </span>\r\n         </div>\r\n         <div className=\"ride_indicators_item__name\">\r\n            {props.name}\r\n         </div>\r\n      </li>\r\n   )\r\n}\r\n\r\nconst RideIndicators = (props) => {\r\n   const date = new Date(props.ride.startDate)\r\n   const startTime = `${date.getHours()}:${addZero(date.getMinutes())}`\r\n\r\n   return (\r\n      <div className=\"ride_indicators\">\r\n         <ul className=\"ride_indicators__group group_1\">\r\n            <RideIndicatorItem value={props.ride.distance}\r\n               decimal={2}\r\n               unit={'km'}\r\n               name={'Total distance'}/>\r\n            <RideIndicatorItem value={props.ride.climb}\r\n               unit={'m'}\r\n               name={'Climb'} />\r\n            <RideIndicatorItem value={props.ride.averageSpeed}\r\n               decimal={1}\r\n               unit={'km/h'}\r\n               name={'Average speed'} />\r\n         </ul>\r\n         <ul className=\"ride_indicators__group group_2\">\r\n            <RideIndicatorItem value={startTime}\r\n               name={'Start time'} />\r\n            <RideIndicatorItem value={convertMsToStr(props.ride.fullTime)}\r\n               name={'Full race time'} />\r\n            <RideIndicatorItem value={convertMsToStr(props.ride.cleanTime)}\r\n               name={'Only riding time'} />\r\n         </ul>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default RideIndicators","import React from \"react\"\r\nimport './InfobarGallery.scss'\r\n\r\nconst GalleryPhoto = (props) => {\r\n   return (\r\n      <li className=\"photo_item\">\r\n         <div className=\"photo_item__photo\">{props.url}</div>\r\n      </li>\r\n   )\r\n}\r\n\r\nconst InfobarGallery = (props) => {\r\n   const galleryItems = props.photos.map(p => <GalleryPhoto key={p} url={p} />)\r\n   return (\r\n      <div className=\"ride_gallery\">\r\n         <h3>Ride gallery</h3>\r\n         <ul className=\"ride_gallery_items\">\r\n            {galleryItems}\r\n         </ul>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default InfobarGallery","import React from \"react\"\r\nimport './Infobar.scss'\r\nimport { addZero } from \"../Common/utilites\"\r\nimport RideMembers from \"./InfobarRideMembers/InfobarRideMembers\"\r\nimport RideIndicators from \"./InfobarRideIndicators/InfobarRideIndicators\"\r\nimport InfobarGallery from \"./InfobarGallery/InfobarGallery\"\r\nimport { useSwipeable } from \"react-swipeable\"\r\n\r\nexport const RideHeader = (props) => {\r\n   const date = new Date(props.date)\r\n   const dateString = `${addZero(date.getDate())}.${addZero(date.getMonth() + 1)}.${date.getFullYear()}`\r\n\r\n   const handlers = useSwipeable({\r\n      onSwiped: (eventData) => {\r\n         if (!props.isMobile) {\r\n            return\r\n         }\r\n         const action = {\r\n            type: 'INFOBAR-HEADER-SWIPED',\r\n            dir: eventData.dir\r\n         }\r\n         props.dispatch(action)\r\n      },\r\n      preventDefaultTouchmoveEvent: true\r\n   })\r\n\r\n   const headerClicked = (e) => {\r\n      if (e.target.closest('a') || !props.isMobile) {\r\n         return\r\n      }\r\n      const action = {\r\n         type: 'TOOGLE-INFOBAR-COLLAPSE',\r\n      }\r\n      props.dispatch(action)\r\n   }\r\n   return (\r\n      <div {...handlers} onClick={headerClicked} className=\"ride_header\" >\r\n         <div className=\"ride_header__name\">\r\n            <h2>{props.name}</h2>\r\n         </div>\r\n         <div className=\"ride_header__subheader\">\r\n            <div className=\"ride_header_date\">\r\n               {dateString}\r\n            </div>\r\n            <a href={props.strava}\r\n                  target=\"_blank\" rel=\"noreferrer\"\r\n                  className=\"strava_link\" >\r\n                  <img src=\"/img/strava.png\" alt=\"strava\" className=\"strava_logo\"/>\r\n                  <div className=\"strava_text\">This ride in Strava</div>\r\n            </a>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst Infobar = (props) => {\r\n   const isCollapsed = props.isCollapsed\r\n   return (\r\n      <>\r\n         <RideHeader name={props.ride.name} date={props.ride.startDate} isMobile={props.isMobile}\r\n               strava={props.ride.stravaLink} dispatch={props.dispatch} />\r\n         <div className={'infobar' + (isCollapsed ? ' collapsed' : '')}>\r\n            <RideHeader name={props.ride.name} date={props.ride.startDate} isMobile={props.isMobile}\r\n               strava={props.ride.stravaLink} dispatch={props.dispatch} />\r\n            <RideMembers members={props.members} />\r\n            <RideIndicators ride={props.ride} />\r\n            <InfobarGallery photos={props.ride.photos}/>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Infobar;","import Infobar from \"./Infobar\";\r\nimport { bikersFilter } from \"../Common/utilites\";\r\n\r\nconst InfobarContainer = (props) => {\r\n   const activeRide = props.state.processedRides[props.state.activeRide]\r\n   const membersNames = activeRide.members\r\n   const allBikers = [...props.state.bikers]\r\n   const members = bikersFilter(membersNames, allBikers)\r\n   const isMobile = props.state.layout.isMobile\r\n   const isCollapsed = props.state.infobar.isCollapsed\r\n\r\n   return <Infobar ride={activeRide} members={members} dispatch={props.dispatch}\r\n      isCollapsed={isCollapsed} isMobile={isMobile} />\r\n}\r\n\r\nexport default InfobarContainer;","import React from \"react\"\r\nimport './InfobarCollapseBtn.scss'\r\n\r\nconst CollapseInfobarBtn = (props) => {\r\n\r\n   const toggleInfobarCollapse = (e) => {\r\n\r\n      const action = {\r\n         type: 'TOOGLE-INFOBAR-COLLAPSE'\r\n      }\r\n      props.dispatch(action)\r\n   }\r\n\r\n   return (\r\n      <button onClick={toggleInfobarCollapse} \r\n         className={'collapse_btn' + (props.isCollapsed ? ' collapsed' : '')}>\r\n         <div className=\"collapse_arrow\"></div>\r\n      </button>\r\n   )\r\n}\r\n\r\nexport default CollapseInfobarBtn","const parseUrl = (url, rides) => {\r\n\r\n   const validUrls = rides.map(ride => ride.url)\r\n\r\n   const checkUrlValidity = (url, variants) => {\r\n      const index = variants.findIndex(item => item === url)\r\n      if (index === -1) {\r\n         return false\r\n      } else {\r\n         return true\r\n      }\r\n   }\r\n\r\n   if (!checkUrlValidity(url, validUrls)) {\r\n      return false\r\n   } else {\r\n      return true\r\n   }\r\n}\r\n\r\nexport default parseUrl","const checkMobile = (isMobile, dispatch) => {\r\n\r\n   const action = {\r\n      type: 'TOGGLE-MOBILE-LAYOUT'\r\n   }\r\n\r\n   if (window.innerWidth < 960) {\r\n      if (isMobile) return\r\n      action.mobile = true\r\n      dispatch(action)\r\n   } else {\r\n      if (!isMobile) return\r\n      action.mobile = false\r\n      dispatch(action)\r\n   }\r\n}\r\n\r\nexport default checkMobile","import React from \"react\";\r\nimport { Logo } from \"../Navbar/Navbar\";\r\nimport './MobileHeader.scss';\r\n\r\nconst BurgerBtn = (props) => {\r\n   return (\r\n      <button className=\"burger_btn\">\r\n         <span className=\"burger_btn__span\"></span>\r\n      </button>\r\n   )\r\n}\r\n\r\nconst MobileHeader = (props) => {\r\n\r\n   const headerOnClick = () => {\r\n      props.dispatch({ type: 'TOGGLE-MOBILE-MENU' })\r\n   }\r\n\r\n   return (\r\n      <div className=\"mobile_header\">\r\n         <div onClick={headerOnClick} >\r\n            <BurgerBtn />\r\n         </div>\r\n         <div onClick={headerOnClick} >\r\n         <Logo />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default MobileHeader","import React from \"react\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport './MobileNavbar.scss';\r\n\r\nconst MobileNavbar = (props) => {\r\n   const navbarIsOpened = props.state.layout.mobileNavbarIsOpen\r\n\r\n   const handlers = useSwipeable({\r\n      onSwipedLeft: (eventData) => {\r\n         const action = {\r\n            type: 'TOGGLE-MOBILE-MENU'\r\n         }\r\n         props.dispatch(action)\r\n      }\r\n   })\r\n\r\n   return (\r\n      <div {...handlers} className={\"mobile_navbar\" + (navbarIsOpened ? \" opened\" : \"\")}>\r\n         <Navbar state={props.state} dispatch={props.dispatch} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default MobileNavbar","import React from \"react\"\r\nimport './Map.scss'\r\n\r\nconst checkUrl = (url) => {\r\n   if (url.match(/https:\\/\\/api-maps\\.yandex\\.ru.+scroll=true/gm)) {\r\n      return true\r\n   } else {\r\n      return false\r\n   }\r\n}\r\n\r\nconst rerenderMap = (props) => {\r\n   const appEl = document.querySelector('.map_container')\r\n   const containerHeight = appEl.scrollHeight\r\n   const mapWithHeight = props.map.replace(/height=\\d+/gm, `height=${containerHeight}`)\r\n   const mapUrl = mapWithHeight.replace(/.+src=\"|\"><\\/script>/gm, '')\r\n   const mapEl = document.querySelector('.map')\r\n   mapEl.innerHTML = ''\r\n\r\n   if (checkUrl(mapUrl)) {\r\n   // if (false) {\r\n      const script = document.createElement('script')\r\n      script.src = mapUrl\r\n      script.async = true\r\n      mapEl.appendChild(script)\r\n   } else {\r\n      const errorMessage = document.createElement('div')\r\n      errorMessage.classList.add('map_error_wrapper')\r\n      errorMessage.innerHTML = '<div>Map for this ride is not ready yet...</div>'\r\n      mapEl.appendChild(errorMessage)\r\n   }\r\n}\r\n\r\nclass Map extends React.PureComponent {\r\n   componentDidMount() {\r\n      rerenderMap(this.props)\r\n   }\r\n   componentDidUpdate() {\r\n      rerenderMap(this.props)\r\n   }\r\n   \r\n   render() {\r\n      return (\r\n         <div className=\"map_container\">\r\n            <div className=\"map_left_gradient\"></div>\r\n            <div className=\"map\"></div>\r\n         </div>\r\n      )\r\n   }\r\n   \r\n}\r\n\r\nexport default Map;","import './App.scss';\nimport NavbarContainer from './components/Navbar/Navbar';\nimport InfobarContainer from './components/Infobar/InfobarContainer';\nimport CollapseInfobarBtn from './components/Infobar/InfobarCollapseBtn/InfobarCollapseBtn';\nimport parseUrl from './components/Common/routing';\nimport checkMobile from './components/Common/checkMobile';\nimport MobileHeader from './components/MobileHeader/MobileHeader';\nimport MobileNavbar from './components/MobileNavbar/MobileNavbar';\nimport Map from './components/Map/Map';\nimport { Redirect } from 'react-router';\n\n\nfunction App(props) {\n   const state = props.store.getState()\n   const dispatch = props.store.dispatch.bind(props.store)\n   const url = props.location.pathname\n   const urlIsValid = parseUrl(url, state.rides, dispatch)\n   \n   if (!urlIsValid) {\n      return <Redirect to={state.processedRides[0].url} />\n   } else {\n      const action = {\n         type: 'SET-ACTIVE-RIDE',\n         url: url\n      }\n      dispatch(action)\n   }\n\n   window.onresize = (() => checkMobile(state.layout.isMobile, dispatch))\n\n   const activeRideIndex = state.activeRide\n   const map = state.processedRides[activeRideIndex].map\n\n   if (!state.layout.isMobile) {\n      return (\n         <div className=\"App\">\n            <div className=\"rides_menu_container\">\n               <NavbarContainer state={state} dispatch={dispatch} />\n               <InfobarContainer state={state} />\n               <CollapseInfobarBtn isCollapsed={state.infobar.isCollapsed} dispatch={dispatch} />\n            </div>\n               <Map map={map} />\n         </div>\n      )\n   } else {\n      return (\n         <div className=\"App mobile\">\n            <MobileHeader dispatch={dispatch} />\n            <div className=\"mobile_main\">\n               <div className=\"mobile_map\">\n                  <Map map={map} />\n               </div>\n               <div className={\"mobile_infobar\" + (state.infobar.isCollapsed ? ' collapsed' : '')}>\n                  <InfobarContainer state={state} dispatch={dispatch} />\n               </div>\n               <MobileNavbar state={state} dispatch={dispatch} />\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default App;","const bikers = [\r\n   {\r\n      name: 'Lavr',\r\n      id: 'Lavr',\r\n      photoSmall: '/img/bikers/Lavr.jpg',\r\n      photoLarge: 'urlAlLarge'\r\n   },\r\n   {\r\n      name: 'Andy',\r\n      id: 'Andy',\r\n      photoSmall: '/img/bikers/Andy.jpg',\r\n      photoLarge: 'url'\r\n   },\r\n   {\r\n      name: 'Nick',\r\n      id: 'Nick',\r\n      photoSmall: '/img/bikers/Nick.jpg',\r\n      photoLarge: 'url'\r\n   },\r\n   {\r\n      name: 'Paul',\r\n      id: 'Paul',\r\n      photoSmall: '/img/bikers//Paul.jpg',\r\n      photoLarge: 'urlPlLarge'\r\n   },\r\n   {\r\n      name: 'Serg',\r\n      id: 'Serg',\r\n      photoSmall: '/img/bikers/Serg.jpg',\r\n      photoLarge: 'urlPlLarge'\r\n   }\r\n]\r\n\r\nexport default bikers","const rides = [\r\n   {\r\n      name: 'Konakovo - Solnechnogorsk',\r\n      map: `<script type=\"text/javascript\" charset=\"utf-8\" async src=\"https://api-maps.yandex.ru/services/constructor/1.0/js/?um=constructor%3A8472ba15980b6a771535d7df0fde7022adbe7e49420c0284e9b5fa633d4e3026&amp;width=100%25&amp;height=507&amp;lang=ru_RU&amp;scroll=true\"></script>`,\r\n      distance: 90.61,\r\n      climb: 539,\r\n      startDate: '2021-08-15',\r\n      startTime: '12:13',\r\n      fullTime: '9:12:25',\r\n      cleanTime: '4:53:44',\r\n      members: ['Lavr', 'Paul', 'Nick', 'Andy'],\r\n      stravaLink: 'https://strava.com',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Through Malino's jungle\",\r\n      map: `<script type=\"text/javascript\" charset=\"utf-8\" async src=\"https://api-maps.yandex.ru/services/constructor/1.0/js/?um=constructor%3A502b1ca7d98ef2d4a8c5a08866594227109af4d9af79bab4d096dbdde10f8025&amp;width=100%25&amp;height=400&amp;lang=ru_RU&amp;scroll=true\"></script>`,\r\n      distance: 28.37,\r\n      climb: 226,\r\n      startDate: '2021-07-25',\r\n      startTime: '14:35',\r\n      fullTime: '3:51:03',\r\n      cleanTime: '2:03:50',\r\n      members: ['Lavr', 'Paul', 'Nick', 'Andy'],\r\n      stravaLink: 'https://strava.com',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"To Pyatnitsa through Povarovo\",\r\n      map: `string`,\r\n      distance: 40.27,\r\n      climb: 1541,\r\n      startDate: '2021-06-20',\r\n      startTime: '14:35',\r\n      fullTime: '4:04:06',\r\n      cleanTime: '2:16:37',\r\n      members: ['Lavr', 'Nick', 'Andy'],\r\n      stravaLink: 'https://strava.com',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Dirty journey to Pavlovskaya Sloboda\",\r\n      map: `string`,\r\n      distance: 63.97,\r\n      climb: 465,\r\n      startDate: '2021-05-07',\r\n      startTime: '11:14',\r\n      fullTime: '8:34:21',\r\n      cleanTime: '5:24:26',\r\n      members: ['Lavr', 'Nick', 'Paul', 'Serg'],\r\n      stravaLink: 'https://strava.com',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Iksha - Pushkino - Dolgoprudniy\",\r\n      map: `string`,\r\n      distance: 87.73,\r\n      climb: 2271,\r\n      startDate: '2021-05-02',\r\n      startTime: '09:20',\r\n      fullTime: '8:16:09',\r\n      cleanTime: '5:45:04',\r\n      members: ['Lavr', 'Nick', 'Serg'],\r\n      stravaLink: 'https://strava.com',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Ring through Moscow and Krasnogorsk\",\r\n      map: `string`,\r\n      distance: 150.56,\r\n      climb: 907,\r\n      startDate: '2020-07-25',\r\n      startTime: '10:55',\r\n      fullTime: '12:41:55',\r\n      cleanTime: '9:27:53',\r\n      members: ['Lavr', 'Andy'],\r\n      stravaLink: 'https://strava.com',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Solnechnogorsk - Yakhroma - Zelenograd\",\r\n      map: `string`,\r\n      distance: 112.78,\r\n      climb: 1267,\r\n      startDate: '2020-07-05',\r\n      startTime: '09:57',\r\n      fullTime: '11:48:59',\r\n      cleanTime: '7:13:28',\r\n      members: ['Lavr', 'Nick', 'Andy'],\r\n      stravaLink: 'https://strava.com',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Klin - Volokolamsk & Snegiri - Zelenograd\",\r\n      map: `string`,\r\n      distance: (77.7 + 14.03),\r\n      climb: (772 + 71),\r\n      startDate: '2020-06-13',\r\n      startTime: '11:03',\r\n      fullTime: '7:17:26',\r\n      cleanTime: '4:44:47',\r\n      members: ['Lavr', 'Nick', 'Andy'],\r\n      stravaLink: 'https://strava.com',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"From Tver to Konarovo across Saint Places\",\r\n      map: `string`,\r\n      distance: 79.3,\r\n      climb: 225,\r\n      startDate: '2019-08-25',\r\n      startTime: '09:18',\r\n      fullTime: '5:26:11',\r\n      cleanTime: '4:36:11',\r\n      members: ['Lavr', 'Nick'],\r\n      stravaLink: 'https://www.strava.com/activities/4472204842',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"To the back side of Istra\",\r\n      map: `string`,\r\n      distance: 139.65,\r\n      climb: 1141,\r\n      startDate: '2019-05-19',\r\n      startTime: '11:36',\r\n      fullTime: '9:06:00',\r\n      cleanTime: '7:50:59',\r\n      members: ['Lavr', 'Nick'],\r\n      stravaLink: 'https://www.strava.com/activities/4472205448',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Assault attempt of under constructed CKAD\",\r\n      map: `string`,\r\n      distance: 30.29,\r\n      climb: 297,\r\n      startDate: '2019-04-20',\r\n      startTime: '14:18',\r\n      fullTime: '2:11:50',\r\n      cleanTime: '1:57:31',\r\n      members: ['Lavr', 'Nick'],\r\n      stravaLink: 'https://www.strava.com/activities/4472268451',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Hike to Yaroslavl, day 2\",\r\n      map: `string`,\r\n      distance: 48.3,\r\n      climb: 239,\r\n      startDate: '2018-07-29',\r\n      startTime: '08:38',\r\n      fullTime: '3:16:25',\r\n      cleanTime: '2:45:08',\r\n      members: ['Lavr', 'Nick'],\r\n      stravaLink: 'https://www.strava.com/activities/4472290953',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Hike to Yaroslavl, day 1\",\r\n      map: `string`,\r\n      distance: 143.54,\r\n      climb: 998,\r\n      startDate: '2018-07-28',\r\n      startTime: '10:52',\r\n      fullTime: '10:09:56',\r\n      cleanTime: '7:40:36',\r\n      members: ['Lavr', 'Nick'],\r\n      stravaLink: 'https://www.strava.com/activities/4472291668',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"From Zvenigorod to Mozhaysk and Borodino\",\r\n      map: `string`,\r\n      distance: 100.59,\r\n      climb: 781,\r\n      startDate: '2018-07-14',\r\n      startTime: '09:57',\r\n      fullTime: '9:09:00',\r\n      cleanTime: '4:52:07',\r\n      members: ['Lavr', 'Nick'],\r\n      stravaLink: 'https://www.strava.com/activities/4472291139',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Autumn trip around Moscow\",\r\n      map: `string`,\r\n      distance: 82.76,\r\n      climb: 594,\r\n      startDate: '2017-09-23',\r\n      startTime: '13:27',\r\n      fullTime: '6:53:15',\r\n      cleanTime: '5:27:55',\r\n      members: ['Lavr', 'Nick'],\r\n      stravaLink: 'https://www.strava.com/activities/4472343428',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   },\r\n   {\r\n      name: \"Journey to the glory of Chester Bennington\",\r\n      map: `string`,\r\n      distance: 164.75,\r\n      climb: 0,\r\n      startDate: '2017-07-22',\r\n      startTime: '11:15',\r\n      fullTime: '10:50:00',\r\n      cleanTime: '10:50:00',\r\n      members: ['Lavr', 'Nick'],\r\n      stravaLink: '',\r\n      photos: [\r\n         'url1',\r\n         'url2',\r\n         'url3',\r\n         'url4'\r\n      ]\r\n   }\r\n]\r\n\r\nexport default rides\r\n","import bikers from \"./bikers-data\";\r\nimport rides from \"./rides-data\";\r\nimport { convertStrToDate, convertStrToMs } from \"../components/Common/utilites\";\r\nimport checkMobile from \"../components/Common/checkMobile\";\r\n\r\nconst store = {\r\n   _state: {\r\n      rides: [],\r\n      processedRides: [],\r\n      bikers: [],\r\n      activeRide: null,\r\n      infobar: {\r\n         isCollapsed: false\r\n      },\r\n      navbar: {\r\n         filterMenuIsOpened: false,\r\n         sortMenuIsOpened: false,\r\n         output: {\r\n            sortParameter: 'date',\r\n            sortFromBiggest: true,\r\n            filteredBikers: []\r\n         }\r\n      },\r\n      layout: {\r\n         mobileNavbarIsOpen: false,\r\n         isMobile: false\r\n      }\r\n   },\r\n\r\n   _callSubscriber() {\r\n   },\r\n\r\n   subscribe(observer) {\r\n      this._callSubscriber = observer\r\n   },\r\n\r\n   _processRides() {\r\n      let tempArr = [...this._state.rides]\r\n      const output = this._state.navbar.output\r\n\r\n      // SORTING\r\n\r\n      const sortRides = (parameter) => {\r\n         if (output.sortFromBiggest) {\r\n            tempArr.sort((a, b) => a[parameter] > b[parameter] ? -1 : 1)\r\n         } else {\r\n            tempArr.sort((a, b) => a[parameter] > b[parameter] ? 1 : -1)\r\n         }\r\n      }\r\n\r\n      switch (output.sortParameter) {\r\n         case 'date':\r\n            sortRides('startDate')\r\n            break\r\n         case 'distance':\r\n            sortRides('distance')\r\n            break\r\n         case 'time':\r\n            sortRides('cleanTime')\r\n            break\r\n         case 'speed':\r\n            sortRides('averageSpeed')\r\n            break\r\n         default:\r\n            sortRides('startDate')\r\n      }\r\n\r\n      // FILTERING\r\n\r\n      const checkBikers = (ride, bikers) => {\r\n         for (let biker of bikers) {\r\n            if (ride.members.find(member => member === biker)) {\r\n               return true\r\n            }\r\n         }\r\n         return false\r\n      }\r\n      tempArr = tempArr.filter(ride => checkBikers(ride, output.filteredBikers))\r\n      this._state.processedRides = [...tempArr]\r\n   },\r\n\r\n   getState() {\r\n      return this._state\r\n   },\r\n\r\n   dispatch(action) {\r\n      switch (action.type) {\r\n         case 'SET-ACTIVE-RIDE':\r\n            const index = this._state.processedRides.findIndex(el => el.url === action.url)\r\n            if (index !== -1) {\r\n               this._state.activeRide = index\r\n            } else {\r\n               this._state.activeRide = 0\r\n            }\r\n            break\r\n         case 'TOGGLE-MOBILE-LAYOUT':\r\n            this._state.layout.isMobile = action.mobile\r\n            this._callSubscriber()\r\n            break\r\n         case 'TOGGLE-FILTER-MENU':\r\n            if (this._state.navbar.filterMenuIsOpened) {\r\n               this._state.navbar.filterMenuIsOpened = false\r\n            } else {\r\n               this._state.navbar.sortMenuIsOpened = false\r\n               this._state.navbar.filterMenuIsOpened = true\r\n            }\r\n            this._callSubscriber()\r\n            break\r\n         case 'TOGGLE-FILTERED-BIKER':\r\n            const filteredBikers = this._state.navbar.output.filteredBikers\r\n            const filterIndex = filteredBikers.findIndex(b => b === action.bikerId)\r\n            if (filterIndex === -1) {\r\n               filteredBikers.push(action.bikerId)\r\n               filteredBikers.sort((a, b) => a > b ? 1 : -1)\r\n            } else {\r\n               if (filteredBikers.length > 1) {\r\n                  filteredBikers.splice(filterIndex, 1)\r\n               }\r\n            }\r\n            this._processRides()\r\n            this._callSubscriber()\r\n            break\r\n         case 'TOGGLE-SORT-MENU':\r\n            if (this._state.navbar.sortMenuIsOpened) {\r\n               this._state.navbar.sortMenuIsOpened = false\r\n            } else {\r\n               this._state.navbar.filterMenuIsOpened = false\r\n               this._state.navbar.sortMenuIsOpened = true\r\n            }\r\n            this._callSubscriber()\r\n            break\r\n         case 'TOGGLE-RIDES-SORT':\r\n            this._state.navbar.output.sortParameter = action.sortParameter\r\n            this._state.navbar.output.sortFromBiggest = action.sortFromBiggest\r\n            this._state.navbar.sortMenuIsOpened = false\r\n            this._processRides()\r\n            this._callSubscriber()\r\n            break\r\n         case 'TOOGLE-INFOBAR-COLLAPSE':\r\n            this._state.infobar.isCollapsed\r\n               ? this._state.infobar.isCollapsed = false\r\n               : this._state.infobar.isCollapsed = true\r\n            document.querySelector('.infobar').scrollTop = 0\r\n            this._callSubscriber()\r\n            break\r\n         case 'INFOBAR-HEADER-SWIPED':\r\n            if (action.dir === 'Up') {\r\n               if (this._state.infobar.isCollapsed) {\r\n                  this._state.infobar.isCollapsed = false\r\n               }\r\n            }\r\n            if (action.dir === 'Down') {\r\n               if (!this._state.infobar.isCollapsed) {\r\n                  this._state.infobar.isCollapsed = true\r\n               }\r\n            }\r\n            document.querySelector('.infobar').scrollTop = 0\r\n            this._callSubscriber()\r\n            break\r\n         case 'TOGGLE-MOBILE-MENU':\r\n            this._state.layout.mobileNavbarIsOpen \r\n               ? this._state.layout.mobileNavbarIsOpen = false\r\n               : this._state.layout.mobileNavbarIsOpen = true\r\n            this._callSubscriber()\r\n            break\r\n         default:\r\n            console.error(`unknown action type: ${action.type}`)\r\n      }\r\n   },\r\n\r\n   initState() {\r\n      initBikers.bind(this)()\r\n      initRides.bind(this)()\r\n      if (!this._state.activeRide) {\r\n         this._state.activeRide = 0\r\n      }\r\n      checkMobile(this._state.layout.isMobile, this.dispatch.bind(this))\r\n      if (this._state.layout.isMobile) {\r\n         this._state.infobar.isCollapsed = true\r\n      }\r\n\r\n      function initBikers() {\r\n         this._state.bikers.length = 0\r\n         bikers.forEach(biker => {\r\n            this._state.bikers = [...this._state.bikers, biker]\r\n         })\r\n         this._state.bikers.sort((a, b) => {\r\n            if (a.id > b.id) {\r\n               return 1\r\n            } else return -1\r\n         })\r\n         this._state.navbar.output.filteredBikers = [...this._state.bikers.map(b => b.id)]\r\n      }\r\n\r\n      function initRides() {\r\n         this._state.rides.length = 0\r\n         rides.forEach(el => {\r\n            let ride = {\r\n               name: el.name,\r\n               id: `${el.startDate}T${el.startTime}`.match(/[0-9]/gi).join(''),\r\n               url: '/rides/' + el.startDate,\r\n               map: el.map,\r\n               startDate: convertStrToDate(el.startDate, el.startTime),\r\n               fullTime: convertStrToMs(el.fullTime),\r\n               cleanTime: convertStrToMs(el.cleanTime),\r\n               distance: el.distance,\r\n               climb: el.climb,\r\n               averageSpeed: +(el.distance / convertStrToMs(el.cleanTime) * 1000 * 60 * 60).toFixed(1),\r\n               members: el.members,\r\n               stravaLink: el.stravaLink,\r\n               photos: [...el.photos]\r\n            }\r\n            this._state.rides = [...this._state.rides, ride]\r\n         })\r\n         this._state.rides.sort((a, b) => {\r\n            if (a.id > b.id) {\r\n               return -1\r\n            } else return 1\r\n         })\r\n         this._state.processedRides = [...this._state.rides]\r\n      }\r\n   }\r\n}\r\n\r\nexport default store\r\nwindow.store = store\r\nwindow.state = store.getState()","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route } from 'react-router'\n\nstore.initState()\n\nconst rerenderEntireTree = () => {\n   ReactDOM.render(\n      <React.StrictMode>\n         <BrowserRouter>\n            <Route path='/' \n               render={({ location }) => <App location={location} store={store} />} />\n         </BrowserRouter>\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n}\n\nrerenderEntireTree()\nstore.subscribe(rerenderEntireTree)\n\n\n"],"sourceRoot":""}